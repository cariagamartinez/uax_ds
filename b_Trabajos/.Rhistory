data <- read.csv("T1/dataset.csv")
# Vista general de los datos
summary(data)
str(data)
# Gráficas de distribución para variables numéricas
# Histograma de 'var1'
ggplot(data, aes(x = var1)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Distribución de var1", x = "var1", y = "Frecuencia")
# Cargar las librerías necesarias
library(ggplot2)
library(dplyr)
# Gráficas de distribución para variables numéricas
# Histograma de 'var1'
ggplot(data, aes(x = var1)) +
geom_histogram(binwidth = 5, fill = "blue", color = "black") +
labs(title = "Distribución de var1", x = "var1", y = "Frecuencia")
# Histograma de 'var2'
ggplot(data, aes(x = var2)) +
geom_histogram(binwidth = 5, fill = "green", color = "black") +
labs(title = "Distribución de var2", x = "var2", y = "Frecuencia")
# Boxplot para comparar 'var6' entre los niveles de 'Target'
ggplot(data, aes(x = factor(Target), y = var6)) +
geom_boxplot(fill = "orange") +
labs(title = "Boxplot de var6 según Target", x = "Target", y = "var6")
# Gráfica de barras para variables categóricas
# Distribución de 'var3'
ggplot(data, aes(x = factor(var3))) +
geom_bar(fill = "purple") +
labs(title = "Distribución de var3", x = "var3", y = "Frecuencia")
# Scatterplot de 'var1' vs 'var2' coloreado por 'Target'
ggplot(data, aes(x = var1, y = var2, color = factor(Target))) +
geom_point() +
labs(title = "Relación entre var1 y var2", x = "var1", y = "var2")
# Cargamos las librerías necesarias
library(tidyverse)  # Para manipulación de datos y visualización
library(caret)      # Para evaluación del modelo
# 1. Lectura del dataset
datos <- read.csv("Session_Workshop/dataset_session_biomedicina.csv")
# Exploración inicial del dataset
str(datos)  # Estructura del dataset
summary(datos)  # Resumen estadístico de las variables
# 2. Análisis Exploratorio de Datos (EDA)
# Distribución de la variable objetivo (Riesgo_Cardiovascular)
hist(datos$Riesgo_Cardiovascular, main = "Distribución del Riesgo Cardiovascular",
xlab = "Riesgo Cardiovascular", ylab = "Frecuencia", col = "skyblue", border = "black")
# Relación entre Edad e IMC con el Riesgo Cardiovascular
plot(datos$Edad, datos$Riesgo_Cardiovascular, main = "Edad vs Riesgo Cardiovascular",
xlab = "Edad", ylab = "Riesgo Cardiovascular", pch = 19, col = "blue")
plot(datos$IMC, datos$Riesgo_Cardiovascular, main = "IMC vs Riesgo Cardiovascular",
xlab = "IMC", ylab = "Riesgo Cardiovascular", pch = 19, col = "red")
# Conversión de variables categóricas a factores para el modelo
datos$Actividad_Fisica <- as.factor(datos$Actividad_Fisica)
datos$Fumador <- as.factor(datos$Fumador)
# Separación de los datos en conjuntos de entrenamiento y prueba
set.seed(123)
index <- createDataPartition(datos$Riesgo_Cardiovascular, p = 0.7, list = FALSE)
train_data <- datos[index, ]
test_data <- datos[-index, ]
# 3. Generación de un modelo de regresión lineal
# Definimos el modelo lineal para predecir el Riesgo Cardiovascular
modelo <- lm(Riesgo_Cardiovascular ~ Edad + IMC + Nivel_Glucosa + Nivel_Colesterol +
Actividad_Fisica + Fumador, data = train_data)
# Resumen del modelo
summary(modelo)
# Utilizamos plot(modelo) para generar los gráficos de diagnóstico
par(mfrow = c(2, 2))  # Configura el espacio de gráficos para mostrar 4 gráficos
plot(modelo)
par(mfrow = c(1, 1))  # Restablece la configuración de gráficos
# 4. Evaluación del Modelo
# Predicción en los datos de entrenamiento
predicciones <- predict(modelo, newdata = test_data)
# Cálculo del error
rmse <- sqrt(mean((test_data$Riesgo_Cardiovascular - predicciones)^2))
cat("Error RMSE del modelo:", rmse, "\n")
